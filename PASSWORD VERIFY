import re

def check_password_strength(password: str) -> str:
    conditions_met = 0

    if len(password) >= 8:
        conditions_met += 1
    if re.search(r'[A-Z]', password) and re.search(r'[a-z]', password):
        conditions_met += 1
    if re.search(r'\d', password):
        conditions_met += 1
    if re.search(r'[!@#$%^&*]', password):
        conditions_met += 1

    if conditions_met == 4:
        return "Strong"
    elif conditions_met >= 2:
        return "Moderate"
    else:
        return "Weak"
while True:
    password = str(input("Enter the password : "))
    print(check_password_strength(password))



namber classifier

def is_prime(n: int) -> bool:
    """Check if a number is prime."""
    if n <= 1:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(n**0.5)+1, 2):
        if n % i == 0:
            return False
    return True

def classify_numbers(numbers: list[int]) -> dict:
    """Classify numbers into Even, Odd, and Prime categories."""
    result = {
        "Even": [],
        "Odd": [],
        "Prime": []
    }

    for num in numbers:
        if num % 2 == 0:
            result["Even"].append(num)
        else:
            result["Odd"].append(num)
        
        if is_prime(num):
            result["Prime"].append(num)

    return result

def main():
    print("--- Number Pattern Classifier ---")
    user_input = input("Enter numbers separated by commas (e.g. 2,3,4,5): ")
    try:
        numbers = list(map(int, user_input.strip().split(',')))
        result = classify_numbers(numbers)
        print("\nClassification Result:")
        for category, nums in result.items():
            print(f"{category}: {nums}")
    except ValueError:
        print("Invalid input. Please enter integers separated by commas.")

if __name__ == "__main__":
    main()
